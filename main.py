import requests
import telebot
import telebot.types as types

from data import *


# –°–ª–æ–≤–∞—Ä—å –∏–∑ chat.id
# –ß—Ç–æ–±—ã —É –∫–∞–∂–¥–æ–≥–æ –º–æ–≥–ª–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ {id: (inValute, toValute)}
chats = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
keyboardValute = types.InlineKeyboardMarkup(row_width=7)  # –ö–æ–¥—ã –≤–∞–ª—é—Ç
keyboardBack = types.InlineKeyboardMarkup()               # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
keyboardMain = types.InlineKeyboardMarkup()               # –ì–ª–∞–≤–Ω–∞—è "—Å—Ç—Ä–∞–Ω–∏—Ü–∞"

old_message = None

bot = telebot.TeleBot(TOKEN)


def init_keyboards():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)"""

    keyboardValute.add(
        types.InlineKeyboardButton(
            "üîô –ù–∞–∑–∞–¥", callback_data="back"
        )
    )
    keyboardBack.add(
        types.InlineKeyboardButton(
            "üîô –ù–∞–∑–∞–¥", callback_data="back"
        )
    )
    keyboardMain.add(
        types.InlineKeyboardButton(
            "üîÅ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å üîÅ", callback_data="convert"
        )
    )
    keyboardMain.add(
        types.InlineKeyboardButton(
            "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ ‚ÑπÔ∏è", callback_data="info"
        )
    )

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å –∫–æ–¥–∞–º–∏ –≤–∞–ª—é—Ç
    # (—Å–¥–µ–ª–∞–Ω–æ –¥–∞–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –º–æ–≥–ª–∏ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è –≤ —Ä—è–¥)
    keyboardButtons = []
    for valuteCode in get_valutes_names().keys():
        keyboardButtons.append(
            types.InlineKeyboardButton(
                valuteCode, callback_data=valuteCode
            )
        )
    keyboardValute.add(*keyboardButtons)


def get_valutes_courses():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∫–æ–¥–∞–º–∏ –≤–∞–ª—é—Ç –∏ –∏—Ö –∫—É—Ä—Å–æ–º –≤ —Ä—É–±–ª—è—Ö {–∫–æ–¥: –∫—É—Ä—Å}"""

    valutes = requests.get(URL_VALUTES).json()["Valute"]
    valutesDict = {"RUB": 1}    # –ö—É—Ä—Å–∞ —Ä—É–±–ª—è –Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ (—É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ...)

    for valute in valutes:
        valutesDict[valute] = int(valutes[valute]["Value"]) / \
            int(valutes[valute]["Nominal"])
    return dict(sorted(valutesDict.items()))


def get_time():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç <–ì–ì.–ú–ú.–î–î –ß–ß.–ú–ú.–°–°>"""

    date = requests.get(URL_VALUTES).json()['Date']
    return f"{date.replace('T', ' ').split('+')[0]} –ø–æ –ú–°–ö"


def get_valutes_names():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∫–æ–¥–∞–º–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≤–∞–ª—é—Ç (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–∞–ª—é—Ç—ã –≤ —Ä–æ–¥. –ø–∞–¥–µ–∂–µ) {–∫–æ–¥: –Ω–∞–∑–≤–∞–Ω–∏–µ}"""

    valutes = requests.get(URL_VALUTES).json()["Valute"]
    valutesDict = {"RUB": "–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å"}

    for valute in valutes:
        valutesDict[valute] = valutes[valute]["Name"]
    return valutesDict


def formatNumber(num: float):
    """
    –ï—Å–ª–∏ –≤ —á–∏—Å–ª–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç .0, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏–ª–æ –±–µ–∑ –Ω–µ–≥–æ, –∏–Ω–∞—á–µ –≤–µ—Ä–Ω—ë—Ç –∏—Å—Ö–æ–¥–Ω–æ–µ —á–∏—Å–ª–æ:
    formatNumber(10.0) => 10
    formatNumber(10.5) => 10.5
    """
    if round(num) - num == 0:
        return round(num)
    else:
        return num


def is_digit(num_string: str):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º (int, float)
    –∏–Ω–∞—á–µ - False
    """
    try:
        float(num_string)
        return True
    except ValueError:
        return False


@bot.message_handler(commands=['start'])  # –ü—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start
def start_message(message):
    """–û—Ç–ø—Ä–∞–≤–∏–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""

    bot.send_message(message.chat.id,
                     start_message_text,
                     reply_markup=keyboardMain
                     )


# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É
@bot.callback_query_handler(func=lambda call: True)
def receivedKey(call):
    if call.message:  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—É—Å—Ç–æ–µ
        inValute, toValute = chats.setdefault(
            str(call.message.chat.id), ("", ""))
        text, board = None, None

        if call.data == "info":
            text = bot_info_text
            board = keyboardBack
        elif call.data == "convert":
            text = "–í—ã–±–µ—Ä–∏ –∫–æ–¥ –≤–∞–ª—é—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞:"
            board = keyboardValute
        elif call.data == "back":
            text = "–¢–µ —Ç–∞ –≤–∞–ª—é—Ç–∞? –¢–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é:"
            if toValute:                # –ï—Å–ª–∏ –≤–≤–µ–¥–¥–µ–Ω–∞ –≤–∞–ª—é—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
                toValute = ""
                board = keyboardValute
            elif inValute:              # –ò–Ω–∞—á–µ –µ—Å–ª–∏ –≤–≤–µ–¥–¥–µ–Ω–∞ –≤–∞–ª—é—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
                inValute = ""
                board = keyboardValute
            else:
                text = start_message_text
                board = keyboardMain
        elif not (inValute and toValute):       # –ï—Å–ª–∏ –Ω–µ –≤–≤–µ–¥–µ–Ω–∞ –ª—é–±–∞—è –≤–∞–ª—é—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
            if call.data in get_valutes_courses():  # –ï—Å–ª–∏ –∫–æ–¥ –≤–∞–ª—é—Ç—ã –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
                if not inValute:   # –ï—Å–ª–∏ –Ω–µ –≤–≤–µ–¥–¥–µ–Ω–∞ –≤–∞–ª—é—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
                    text = "–û—Ç–ª–∏—á–Ω–æ! –í—ã–±–µ—Ä–∏ –∫–æ–¥ –≤–∞–ª—é—Ç—ã –≤ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏."
                    board = keyboardValute
                    inValute = call.data
                elif not toValute:  # –ò–Ω–∞—á–µ –µ—Å–ª–∏ –Ω–µ –≤–≤–µ–¥–¥–µ–Ω–∞ –≤–∞–ª—é—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
                    text = "–•–æ—Ä–æ—à–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å—É–º–º—É –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞."
                    board = keyboardBack
                    toValute = call.data

        chats[str(call.message.chat.id)] = (inValute, toValute)

        # –ú–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        global old_message
        old_message = bot.edit_message_text(text, call.message.chat.id,
                                            call.message.id, reply_markup=board
                                            ).message_id


@ bot.message_handler(content_types='text')  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ
def receivedSumValute(message):
    inValute, toValute = chats.setdefault(str(message.chat.id), ("", ""))

    if (inValute and toValute):  # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –æ–±–µ –≤–∞–ª—é—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
        text, board = None, None

        if is_digit(message.text):  # –ï—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ (float –∏–ª–∏ int)
            valutesCourses = get_valutes_courses()
            valutesName = get_valutes_names()
            inValuteCourse = valutesCourses[inValute]
            toValuteCourse = valutesCourses[toValute]

            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—É–º–º—É:
            course = inValuteCourse / toValuteCourse
            sumValute = round(float(message.text) * course, 2)

            inValuteSum = '{0:,}'.format(
                formatNumber(float(message.text))
            ).replace(',', ' ')
            toValuteSum = '{0:,}'.format(
                formatNumber(sumValute)
            ).replace(',', ' ')

            text = f"–ì–æ—Ç–æ–≤–æ!\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ({get_time()}) üïë\n \
                    {inValuteSum} {valutesName[inValute]} ({inValute}) - –ø—Ä–∏–º–µ—Ä–Ω–æ {toValuteSum} {valutesName[toValute]} ({toValute}).\n \
                    –ö—É—Ä—Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {round(course, 2)} {inValute}/{toValute}\n \
                    –û–±—Ä–∞—â–∞–π—Å—è –µ—â—ë, –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å! :)"
            board = keyboardMain
            inValute, toValute = "", ""
        else:
            text = "–£–ø—Å! –ü–æ–∂–æ–∂–µ —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ :(\n–ù–∞–ø–∏—à–∏ —Å—É–º–º—É –µ—â—ë —Ä–∞–∑."
            board = None  # –ù–µ –∑–∞–º–µ–Ω—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

        chats[str(message.chat.id)] = (inValute, toValute)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.delete_message(message.chat.id, message.id)

        # –ú–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.edit_message_text(text, message.chat.id,
                              old_message, reply_markup=board
                              )


if (__name__ == "__main__"):
    init_keyboards()
    bot.infinity_polling()
